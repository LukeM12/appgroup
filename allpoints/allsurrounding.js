//Visual TO minto

FH__NW_CRN.SURR=new Array(FH_NE_CRN,FH_SW_CRN);
FH_NE_CRN.SURR=new Array(FH_NW_CRN,FH_SE_CRN);
FH_SE_CRN.SURR=new Array(FH_NE_CRN);
FH_SW_CRN.SURR=new Array(SMC_W_ENT,FH_NW_CRN);
SMC_W_ENT.SURR=new Array(FH_SW_CRN,SMC_E_SIDE);
SMC_E_SIDE.SURR=new Array(SMC_W_ENT,GY_NW_CRN,PATH_BETW_SMC_GY);
GY_NW_CRN.SURR=new Array(SMC_E_SIDE,PATH_BETW_SMC_GY);
S_VS_PATH.SURR=new Array(SW_SR_PATH);
SW_SR_PATH.SURR=new Array(S_VS_PATH,S_SR_PATH);
S_SR_PATH.SURR=new Array(SW_SR_PATH,FS_HC_PATH,S_HC_PATH);
FS_HC_PATH.SURR=new Array(S_SR_PATH,FS_LB_PATH);
N_HC.SURR=new Array(SW_SH_PATH,S_SA_PATH);
SW_SH_PATH.SURR=new Array(N_HC,W_SA_PATH);
S_SA_PATH.SURR=new Array(N_HC,SE_SA_PATH);
SE_SA_PATH.SURR=new Array(S_SA_PATH,N_CRN_LB_PATH);
W_SA_PATH.SURR=new Array(SW_SH_PATH,S_CRN_NW_PATH);
S_CRN_NW_PATH.SURR= new Array(W_SA_PATH,S_ML_PATH);
S_ML_PATH.SURR=new Array(S_CRN_NW_PATH,SE_ML_PATH);
N_CRN_LB_PATH.SURR=new Array(SE_SA_PATH,PA_W_ENT);
PA_W_ENT.SURR=new Array(N_CRN_LB_PATH,S_PA_PATH);
SE_ML_PATH.SURR=new Array(NE_ML_ENT,PA_N_ENT,S_TB_CRN);
NE_ML_ENT.SURR=new Array(NE_ML_CRN,M_COURT,SE_ML_PATH);
NE_ML_CRN.SURR=new Array(N_ML_ENT,S_DT_ENT,NE_ML_ENT);
N_ML_ENT.SURR=new Array(NE_ML_CRN);
S_DT_ENT.SURR=new Array(NE_ML_CRN,W_TB_CRN,M_COURT);
COURT_ENT_W_TB.SURR=new Array(M_COURT,ENT_TB_SW,W_TB_CRN);
W_TB_CRN.SURR=new Array(COURT_ENT_W_TB,S_DT_ENT,AP_E_ENT,PATH_AP_STAIR);
PATH_AD_STAIR.SURR=new Array(AP_E_ENT,W_TB_CRN,AT_AP);
PATH_BETW_TB_HZ.SURR=new Array(PATH_HZ,ENT_HP_SM);
ENT_HP_SM.SURR=new Array(PATH_HZ,PATH_BETW_TB_HZ);
PATH_CRN_HZ.SURR=new Array(PATH_BETW_UC_SC,UC_ENT_S,PATH_BETW_TB_HZ,PATH_BETN_HZ_SC)
UC_ENT_S.SURR=new Array(PATH_CRN_HZ);
SC_M_ENT_E.SURR=new Array(PATH_P2_B_ENT);
AT_AP.SURR=new Array(PATH_AP_STAIR,PATH_CB_AT);
PATH_CB_AT.SURR=new Array(AT_AP,PATH_BETW_CB_UC,NC_LIBR);
PATH_BETW_CB_UC.SURR=new Array(PATH_BETW_BC_AT,AA_W_CRN,BETW_CB_AA);
BETW_CB_AA.SURR=new Array(ENT_CB_E,AA_W_CRN,PATH_BETW_CB_UC,BETW_AA_ME,ENT,ME4_S);
UC_NE_ENT.SURR = new Array(AA_W_CRN);
ENT_CB_E.SURR = new Array(BETW_CB_AA);
AA_W_CRN.SURR= new Array(AA_SW_ENT,UC_NE_ENT,BETW_CB_AA);
BETW_AA_ME.SURR= new Array(NMC_LIBR,BETW_CB_AA);
NMC_LIBR.SURR= new Array(INTR_CMPA_LIBR,BETW_AA_ME,PATH_P2_B_ENT,ENT_ME4_N);
NC_LIBR.SURR=new Array(PATH_BETW_CB_AT,N_LH_LIBR);
N_LH_LIBR.SURR=new Array(ENT_ME3_W,ENT_CB_W,NC_LIBR,NPH_LIBR,W_LH);
ENT_CB_W.SURR=new Array(N_LH_LIBR);
ENT_ME3_W.SURR= new Array(N_LH_LIBR,ENT_ME3_E);
ENT_ME4_S.SURR= new Array(BETW_CB_AA,ENT_ME4_N);
ENT_ME4_N.SURR= new Array(ENT_ME3_E,NMC_LIBR,ENT_ME2_S,ENT_ME4_S);
ENT_ME3_E.SURR= new Array(ENT_ME4_N,ENT_ME2_S,ENT_ME3_W);
ENT_ME2_S.SURR= new Array(ENT_ME3_E,ENT_ME4_N);
NPH_LIBR.SURR= new Array(PATH_BETW_PH_LH,N_LH,LIBR,MC_ENT_NW,PH_ENT_MAIN,INTR_CMPA_LIBR);
INTR_CMPA_LIBR.SURR= new Array(NPH_LIBR,MC_ENT_N,NMC_LIBR,E_GH);

//central carleton
ALM_CR_E.SURR=new Array(PATH_BETW_AH_IH, IH_NE_CRN);
PATH_BETW_AH_IH.SURR=new Array(ALM_CR_E,IH_NE_CRN,IH_NW_CRN);
IH_NE_CRN.SURR=new Array(ALM_CR_E,PATH_BETW_AH_IH );

//
IH_NW_CRN.SURR=new Array(PATH_BETW_AH_IH,GY_NW_CRN);

//
MT_ENT_N.SURR=new Array(PATH_BETW_CC_GY,NML_LIBR);
PATH_BETW_CC_GY.SURR=new Array(MT_ENT_N,IH_W_ENT);
IH_W_ENT.SURR=new Array(PATH_BETW_CC_GY,IH_SW_CRN);

//

UDR_S.SURR=new Array(PATH_RB_CAMR,RO_OT_W,PATH_P2_B_ENT,RO_ENT_PATH);
PATH_RB_CAMR.SURR=new Array(UDR_S,RO_OT_W,PATH_P2_B_ENT);
RO_OT_W.SURR=new Array(PATH_RB_CAMR,PATH_P2_B_ENST,UDR_S);
PATH_P2_B_ENT.SURR=new Array(PATH_RB_CAMR,RO_OT_W,SC_M_ENT_E,NMC_LIBR);





// path arrays 

S_HC-PATH.SURR=new Array(S_SR_PATH,S_LB_PATH);
FS_LB_PATH.SURR=new Array(FS_HC_PATH,LE_SE_ENT);
S_LB_PATH.SURR=new Array(S_HC_PATH,S_LB_PATH);


//

S_PA_PATH.SURR=new Array(PA_W_ENT,SE_PA_PATH);
SE_PA_PATH.SURR=new Array(PA_E_ENT,PATH_HZ);
PA_E_ENT.SURR=new Array(SE_PA_PATH,PATH_HZ);
PATH_HZ.SURR=new Array(PATH_TB_STAIR,PATH_BETW_TB_HZ,PA_E_ENT,SE_PA_PATH);


//
M_COURT.SURR=new Array(SE_ML_PATH,NE_ML_ENT,S_DT_ENT,COURT_ENT_W_TB,PA_N_ENT);
PA_N_ENT.SURR=new Array(SE_ML_PATH,S_TB_CRN);
S_TB_CRN.SURR=new Array(PATH_TB_STAIR,ENT_TB_SW,SE_ML_PATH);
ENT_TB_SW.SURR=new ArrAY(COURT_ENT_W_TB,S_TB_CRN);

//
PATH_BETW_HZ_SC.SURR=new Array(PATH_BETW_RB_HZ,PATH_CRN_HZ);
PATH_BETW_RB_HZ.SURR=new Array(PATH_HZ_UNIDR_A,PATH_BETN_HZ_SC);
PATH_HZ_UNIDR_A.SURR=new Array(PATH_HZ_UNIDR_B);
PATH_HZ_UNIDR_B.SURR=new Array(PATH_HZ_A,LE_SE_ENT);


//part3

LE_SE_ENT.SURR=new Array(PATH_HZ_UNIDR_B,FS_LB_PATH);
PATH_BETW_UC_SC.SURR=new Array(PATH_P2_B,PATH_CRN_SC,SC_M_ENT_E);
PATH_P2_B.SURR=new Array(PATH_BETW_SC,AA_E_CRN,UC_NE_ENT);


	S_SD.SURR = new Array (SD_ENT_MAIN,SD_ENT_MAIN2,C0_ENT_SIDE,E_SP);	
	W_SD.SURR = new Array (N_SD,E_SP,LE_ENT_MAIN,SP_ENT_MAIN,SD_ENT_SIDE);	
	E_SD.SURR = new Array (SD_ENT_SIDE2,FE_SD);
	FE_SD.SURR = new Array (E_SD);	
	N_SD.SURR = new Array (W_SD,SD_ENT_SIDE);	
	E_SP.SURR = new Array (S_SD,W_SD,E_RU);	
	W_CO.SURR = new Array (GH_ENT_SIDE,E_RU,W_LX);	
	E_RU.SURR = new Array (E_RU,GH_ENT_SIDE,W_LX);	
	E_GH.SURR = new Array (GH_ENT_SIDE2,LX_ENT_SIDE2,E_LX,CO_ENT_MAIN2);	
	E_LX.SURR = new Array (E_GH,LX_ENT_SIDE2,LX_ENT_SIDE3,E_RH);	
	W_LX.SURR = new Array (W_CO,LX_ENT_SIDE,PATH_BTW_FR_RH);	
	PATH_BTW_FR_RH.SURR = new Array (W_LX,FR_ENT_MAIN,E_FR); /// DOUBLE CHECK
	E_RH.SURR = new Array (E_LX,S_RH2,INTR_CMPA_LIBR,PR_ENT_SIDE3);	
	INTR_CMPA_LIBR.SURR = new Array (E_RH,NPH_LIBR,PH_ENT_MAIN,PR_ENT_SIDE3); //MAKE SURE NO1 ELSE WROTE THIS TOO
	NPH_LIBR.SURR = new Array (INTR_CMPA_LIBR,PATH_BETW_LH_PH,PH_ENT_MAIN); //MAKE SURE NO1 ELSE WROTE THIS TOO
	PATH_BETW_LH_PH.SURR = new Array (NPH_LIBR,E_FR);
	S_RH.SURR = new Array (S_RH2,RH_ENT_MAIN,RH_ENT_SIDE,PH_ENT_SIDE,E_FR);	
	E_FR.SURR = new Array (PATH_BTW_FR_RH,FR_ENT_MAIN,S_RH,PATH_BETW_LH_PH);	//DOUBLE CHECK
	S_LH.SURR = new Array (W_RU);	
	S_LE.SURR = new Array (LE_ENT_MAIN,W_RU);
	W_RU.SURR= new Array (S_RU,S_LE);
	E_RU.SURR = new Array (W_CO,W_SP,RU_ENT_MAIN,RU_ENT_SIDE,CO_ENT_MAIN);	
	S_RU.SURR = new Array (W_RU,RU_ENT_SIDE2,RU_ENT_SIDE3,W_GR);	
	W_GR.SURR = new Array (S_RU,W_FR);	
	W_FR.SURR = new Array (E_GR,GR_ENT_SIDE,FR_ENT_SIDE,FR_ENT_SIDE2,FR_ENT_SIDE3);	
	W_LH.SURR = new Array (W_FR,LH_ENT_SIDE,FR_ENT_SIDE3);	
	LE_ENT_MAIN.SURR = new Array (W_SD,S_LE);	
	SP_ENT_MAIN.SURR = new Array (E_SP);	
	SP_ENT_SIDE.SURR = new Array (E_SP);	
	SD_ENT_MAIN.SURR = new Array (E_SP,S_SD);	///MAY WANT C0_ENT_SIDE
	SD_ENT_MAIN2.SURR = new Array (E_SP,S_SD);	//MAY WANT C0_ENT_SIDE
	SD_ENT_SIDE.SURR = new Array (N_SD,W_SD);	
	SD_ENT_SIDE2.SURR = new Array (E_SD);	
	CO_ENT_MAIN.SURR = new Array (E_RU);	
	CO_ENT_MAIN2.SURR = new Array (E_GH);	///NEEDS ANOTHER POINT NORTH OF RES ON CAMPUS AVE
	C0_ENT_SIDE.SURR = new Array (E_SP,S_SD,SD_ENT_MAIN,SD_ENT_MAIN2);///////
	RU_ENT_MAIN.SURR = new Array (E_RU);	
	RU_ENT_SIDE1.SURR = new Array (E_RU);	
	RU_ENT_SIDE2.SURR = new Array (W_RU,S_RU);	
	RU_ENT_SIDE3.SURR = new Array (W_RU,S_RU);	
	GH_ENT_SIDE.SURR = new Array (W_LX,W_CO);	
	GH_ENT_SIDE2.SURR = new Array (E_LX,E_GH);	
	LX_ENT_MAIN.SURR = new Array (W_LX,E_LX);	
	LX_ENT_SIDE.SURR = new Array (W_LX);	
	LX_ENT_SIDE2.SURR = new Array (E_LX,E_GH);	
	LX_ENT_SIDE3.SURR = new Array (E_LX,E_RH);	
	RH_ENT_MAIN.SURR = new Array (S_RH,S_RH2);	
	RH_ENT_SIDE.SURR = new Array (S_RH,S_RH2);	
	S_RH2.SURR = new Array (RH_ENT_SIDE,PH_ENT_SIDE3,E_RH,S_RH); 
	PH_ENT_MAIN.SURR = new Array (NPH_LIBR,NTR_CMPA_LIBR);	
	PH_ENT_SIDE.SURR = new Array (S_RH,E_FR);	
	PH_ENT_SIDE2.SURR = new Array (S_RH2);	
	PH_ENT_SIDE3.SURR = new Array (E_RH,INTR_CMPA_LIBR);	
	GR_ENT_SIDE.SURR = new Array (PATH_BTW_FR_RH,W_FR);	
	FR_ENT_MAIN.SURR = new Array (E_FR,PATH_BTW_FR_RH); ///CHECK MAP
	FR_ENT_SIDE.SURR = new Array (W_FR); 	
	FR_ENT_SIDE2.SURR = new Array (W_FR,W_LH);	
	FR_ENT_SIDE3.SURR = new Array (W_FR,W_LH);	
	LH_ENT_MAIN.SURR = new Array (PATH_BETW_LH_PH);
	LH_ENT_SIDE.SURR = new Array (W_LH);

//main campus
ALM_CR_E.SURR=new Array(PATH_BETW_AH_IH, IH_NE_CRN);
PATH_BETW_AH_IH.SURR=new Array(ALM_CR_E,IH_NE_CRN,IH_NW_CRN);
IH_NE_CRN.SURR=new Array(ALM_CR_E,PATH_BETW_AH_IH );


MT_ENT_N.SURR=new Array(PATH_BETW_CC_GY,NML_LIBR);
PATH_BETW_CC_GY.SURR=new Array(MT_ENT_N,IH_W_ENT,MT_ENT_E);
IH_W_ENT.SURR=new Array(PATH_BETW_CC_GY,IH_SW_CRN);
MT_ENT_E.SURR= new Array(PATH_BETW_CC_CY, CTTC_ENT_E, RO_MT_PATH);
CCTC_ENT_E.SURR= new Array(MT_ENT_E);
RO_MT_PATH.SURR= new Array(MT_ENT_E, NB_ENT_E, RO_ENT_PATH);
NB_ENT_E.SURR=new Array(RO_ENT_PATH);
RO_ENT_PATH.SURR=new Array(RO_MT_PATH, UDR_S,RO_ME_ENT);
RO_ME_ENT.SURR=new Array(RO_ENT_PATH);



UDR_S.SURR=new Array(PATH_RB_CAMR,RO_OT_W,PATH_P2_B_ENT,RO_ENT_PATH);
PATH_RB_CAMR.SURR=new Array(UDR_S,RO_OT_W,PATH_P2_B_ENT);
RO_OT_W.SURR=new Array(PATH_RB_CAMR,PATH_P2_B_ENST,UDR_S);
PATH_P2_B_ENT.SURR=new Array(PATH_RB_CAMR,RO_OT_W,SC_M_ENT_E,NMC_LIBR);





// path arrays 

S_HC-PATH.SURR=new Array(S_SR_PATH,S_LB_PATH);
FS_LB_PATH.SURR=new Array(FS_HC_PATH,LE_SE_ENT);
S_LB_PATH.SURR=new Array(S_HC_PATH,S_LB_PATH);


//

S_PA_PATH.SURR=new Array(PA_W_ENT,SE_PA_PATH);
SE_PA_PATH.SURR=new Array(PA_E_ENT,PATH_HZ);
PA_E_ENT.SURR=new Array(SE_PA_PATH,PATH_HZ);
PATH_HZ.SURR=new Array(PATH_TB_STAIR,PATH_BETW_TB_HZ,PA_E_ENT,SE_PA_PATH);


//
M_COURT.SURR=new Array(SE_ML_PATH,NE_ML_ENT,S_DT_ENT,COURT_ENT_W_TB,PA_N_ENT);
PA_N_ENT.SURR=new Array(SE_ML_PATH,S_TB_CRN);
S_TB_CRN.SURR=new Array(PATH_TB_STAIR,ENT_TB_SW,SE_ML_PATH);
ENT_TB_SW.SURR=new ArrAY(COURT_ENT_W_TB,S_TB_CRN);


PATH_BETW_HZ_SC.SURR=new Array(PATH_BETW_RB_HZ,PATH_CRN_HZ);
PATH_BETW_RB_HZ.SURR=new Array(PATH_HZ_UNIDR_A,PATH_BETN_HZ_SC);
PATH_HZ_UNIDR_A.SURR=new Array(PATH_HZ_UNIDR_B);
PATH_HZ_UNIDR_B.SURR=new Array(PATH_HZ_A,LE_SE_ENT);


//

LE_SE_ENT.SURR=new Array(PATH_HZ_UNIDR_B,FS_LB_PATH);
PATH_BETW_UC_SC.SURR=new Array(PATH_P2_B,PATH_CRN_SC,SC_M_ENT_E);
PATH_P2_B.SURR=new Array(PATH_BETW_SC,AA_E_CRN,UC_NE_ENT);







